# There should be a file called .github/workflows/frontend-ci.yaml in the root of the project.
# on every pull request against the main branch.
name: Miro's FE CI
on:
    # pull_request to main branch
    pull_request:
        branches: main
    # Manual trigger
    workflow_dispatch:
env:
  frontend_path: ./starter/frontend
  node_version: '18'

jobs:
    lint-job:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Nodejs
              uses: actions/setup-node@v4
              with:
                node-version: ${{  env.node_version}}

            # https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows
            - name: Cache node modules
              # job id
              id: cache-npm
              uses: actions/cache@v3
              env:
                cache-name: cache-node-modules
              with:
                # npm cache files are stored in `~/.npm` on Linux/macOS
                path: ~/.npm
                key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                    ${{ runner.os }}-build-${{ env.cache-name }}-
                    ${{ runner.os }}-build-
                    ${{ runner.os }}-
            - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
              name: Inform of cache hit
              run: echo "cache miss :("

            - name: Install dependencies
              # change path
              working-directory: ${{ env.frontend_path }}
              run: npm ci

            - name: Run lint
              id: run-lint
              working-directory: ${{ env.frontend_path }}
              run: npm run lint
            # - if: ${{ steps.run-lint.outputs.cache-hit != 'true' }}
            #   name: Inform of cache hit
            #   run: echo "cache miss :("
    test-job:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup Nodejs
          uses: actions/setup-node@v4
          with:
            node-version: ${{  env.node_version}}

        # https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows
        - name: Cache node modules
          # job id
          id: cache-npm
          uses: actions/cache@v3
          env:
            cache-name: cache-node-modules
          with:
            # npm cache files are stored in `~/.npm` on Linux/macOS
            path: ~/.npm
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
                ${{ runner.os }}-build-${{ env.cache-name }}-
                ${{ runner.os }}-build-
                ${{ runner.os }}-
        - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
          name: Inform of cache hit
          run: echo "cache miss :("

        - name: Install dependencies
          # change path
          working-directory: ${{ env.frontend_path }}
          run: npm ci

        - name: Run test
          working-directory: ${{ env.frontend_path }}
          run: npm run test

    build-job:
      # I was confused does step in build needs to be repated or there was an error in assignement defintion
      needs: [lint-job, test-job]
      # if jobs in needs are successful
      if: success()
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Build docker image
          working-directory: ${{ env.frontend_path }}
          run: sudo docker build --tag mp-backend:latest .
